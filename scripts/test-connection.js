import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
dotenv.config();

console.log('๐ ุงุฎุชุจุงุฑ ุงุชุตุงู Supabase...');
console.log('URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? 'โ ููุฌูุฏ' : 'โ ููููุฏ');
console.log('Service Role Key:', process.env.SUPABASE_SERVICE_ROLE_KEY ? 'โ ููุฌูุฏ' : 'โ ููููุฏ');

if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_ROLE_KEY) {
  console.error('\nโ ุฎุทุฃ: ูุฑุฌู ุงูุชุฃูุฏ ูู ุชุนููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุงููุทููุจุฉ ูู ููู .env');
  process.exit(1);
}

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY,
  {
    auth: {
      autoRefreshToken: false,
      persistSession: false,
    },
  }
);

async function testConnection() {
  try {
    console.log('\n๐ ุฌุงุฑู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู Supabase...');
    
    // ูุญุงููุฉ ุฌูุจ ุฅุตุฏุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    const { data, error } = await supabase.rpc('version');
    
    if (error) {
      console.log('โน๏ธ ูุง ูููู ุงููุตูู ุฅูู ุฏุงูุฉ versionุ ุฌุฑุจ ุทุฑููุฉ ุจุฏููุฉ...');
      await testAlternativeConnection();
      return;
    }
    
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ!');
    console.log('ุฅุตุฏุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', data);
    
  } catch (error) {
    console.error('\nโ ูุดู ุงูุงุชุตุงู ุจู Supabase:');
    console.error(error);
    await testAlternativeConnection();
  }
}

async function testAlternativeConnection() {
  try {
    console.log('\n๐ ุฌุฑุจ ุทุฑููุฉ ุงุชุตุงู ุจุฏููุฉ...');
    const { data, error } = await supabase.from('_tables').select('*').limit(1);
    
    if (error) throw error;
    
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ (ุงูุทุฑููุฉ ุงูุจุฏููุฉ)');
    console.log('ุงูุจูุงูุงุช ุงููุณุชุฑุฌุนุฉ:', data);
    
  } catch (error) {
    console.error('\nโ ูุดู ุงูุงุชุตุงู ุจุงูุทุฑููุฉ ุงูุจุฏููุฉ:');
    console.error('ุงูุฑุณุงูุฉ:', error.message);
    console.error('\n๐ง ุฎุทูุงุช ุงุณุชูุดุงู ุงูุฃุฎุทุงุก ูุฅุตูุงุญูุง:');
    console.log('1. ุชุฃูุฏ ูู ุตุญุฉ ุนููุงู URL ูููุชุงุญ ุงูุฎุฏูุฉ ูู ููู .env');
    console.log('2. ุชุญูู ูู ุงุชุตุงู ุงูุฅูุชุฑูุช');
    console.log('3. ุชุฃูุฏ ูู ุฃู ุนููุงู URL ูู Supabase ุตุงูุญ ููููู ุงููุตูู ุฅููู');
    console.log('4. ุชุญูู ูู ุฃู ููุชุงุญ ุงูุฎุฏูุฉ ุตุงูุญ ููู ุงูุตูุงุญูุงุช ุงููุงููุฉ');
  } finally {
    process.exit(0);
  }
}

// ุชุดุบูู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
testConnection();
